// <auto-generated />
using System;
using ForwardBalance.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForwardBalance.API.Migrations
{
    [DbContext(typeof(ForwardBalanceContext))]
    [Migration("20200503224054_AddTestEntries")]
    partial class AddTestEntries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForwardBalance.API.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(20);

                    b.Property<int>("BankId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool>("IsHidden");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new { Id = 1, AccountNumber = "0", BankId = 1, Description = "System account for transfers in and out of listed accounts", IsHidden = true, Name = "Cash Account" }
                    );
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsHidden");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RoutingNumber");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new { Id = 1, IsHidden = true, Name = "System", RoutingNumber = 0 }
                    );
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<double>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("TransferAccountId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransferAccountId");

                    b.ToTable("Entries");

                    b.HasData(
                        new { Id = 1, AccountId = 1, Amount = 0.0, Date = new DateTime(2020, 4, 26, 10, 10, 0, 0, DateTimeKind.Unspecified), Description = "Starting balance", TransferAccountId = 1 },
                        new { Id = 100, AccountId = 2, Amount = 10.0, Date = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Deposit", TransferAccountId = 1 },
                        new { Id = 101, AccountId = 1, Amount = -10.0, Date = new DateTime(2020, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Deposit", TransferAccountId = 2 }
                    );
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Account", b =>
                {
                    b.HasOne("ForwardBalance.API.Entities.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Entry", b =>
                {
                    b.HasOne("ForwardBalance.API.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ForwardBalance.API.Entities.Account", "TransferAccount")
                        .WithMany()
                        .HasForeignKey("TransferAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
