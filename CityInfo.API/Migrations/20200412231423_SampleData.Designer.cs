// <auto-generated />
using ForwardBalance.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForwardBalance.API.Migrations
{
    [DbContext(typeof(ForwardBalanceContext))]
    [Migration("20200412231423_SampleData")]
    partial class SampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForwardBalance.API.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber");

                    b.Property<int>("BankId");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new { Id = 1, AccountNumber = 0, BankId = 1, Description = "Simple checking.", Name = "Checking" },
                        new { Id = 2, AccountNumber = 0, BankId = 1, Description = "Simple savings.", Name = "Savings" },
                        new { Id = 3, AccountNumber = 0, BankId = 2, Description = "Business checking.", Name = "Checking" },
                        new { Id = 4, AccountNumber = 0, BankId = 2, Description = "High interest savings account.", Name = "High Yield Savings" },
                        new { Id = 5, AccountNumber = 0, BankId = 3, Description = "Small interest on checking account balance.", Name = "Interest Checking" },
                        new { Id = 6, AccountNumber = 0, BankId = 3, Description = "Typical rate savings account.", Name = "Interest Savings" }
                    );
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RoutingNumber");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new { Id = 1, Name = "Bank of America", RoutingNumber = 11111 },
                        new { Id = 2, Name = "Chase Bank", RoutingNumber = 22222 },
                        new { Id = 3, Name = "PNC Bank", RoutingNumber = 33333 }
                    );
                });

            modelBuilder.Entity("ForwardBalance.API.Entities.Account", b =>
                {
                    b.HasOne("ForwardBalance.API.Entities.Bank", "Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
